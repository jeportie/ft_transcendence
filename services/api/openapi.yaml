# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    openapi.yaml                                       :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2025/09/08 13:01:22 by jeportie          #+#    #+#              #
#    Updated: 2025/09/08 18:54:07 by jeportie         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

openapi: 3.0.3
info:
  title: ft_transcendence API
  version: 1.1.0
  description: >
    API for the ft_transcendence project.  
    Provides authentication (JWT + rotating refresh cookies), health monitoring, and game-related endpoints.
servers:
  - url: http://localhost:5000
    description: Local development server
tags:
  - name: System
  - name: Authentication
  - name: Admin

paths:
  /api/health:
    get:
      summary: Health check
      description: Returns the current health status of the API and database.
      tags: [System]
      operationId: getHealth
      responses:
        "200":
          description: Health status response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  updated_at:
                    type: string
                    format: date-time
                    nullable: true
                    example: "2025-09-05T14:30:00.000Z"

  /api/auth/login:
    post:
      summary: Login (issue access & refresh)
      description: >
        Authenticates a user by username/email + password.  
        Returns a short-lived access token in the response body and sets an httpOnly refresh cookie for renewal.
      tags: [Authentication]
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user, pwd]
              properties:
                user:
                  type: string
                  example: jeportie
                pwd:
                  type: string
                  example: secret123
      responses:
        "200":
          description: Login successful
          headers:
            Set-Cookie:
              description: >
                httpOnly refresh token cookie (cookie name configured via `COOKIE_NAME_RT`);  
                attributes include Path, HttpOnly, SameSite, and optionally Secure.
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  succes:
                    type: boolean
                    example: true
                  user:
                    type: string
                    example: jeportie
                  role:
                    type: string
                    example: player
                  token:
                    type: string
                    description: JWT access token
                  exp:
                    type: string
                    example: "15m"
        "400":
          description: Missing credentials
        "401":
          description: Invalid credentials

  /api/auth/refresh:
    post:
      summary: Refresh access token (rotate refresh)
      description: >
        Uses the httpOnly refresh cookie to validate and **rotate** the refresh token, then returns a new access token.  
        No Authorization header required. The endpoint sets a new rotated refresh cookie.
      tags: [Authentication]
      operationId: refresh
      responses:
        "200":
          description: New access token issued
          headers:
            Set-Cookie:
              description: >
                Rotated httpOnly refresh token cookie (cookie name via `COOKIE_NAME_RT`).
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  succes:
                    type: boolean
                    example: true
                  token:
                    type: string
                    description: New JWT access token
                  exp:
                    type: string
                    example: "15m"
        "401":
          description: Unauthorized (missing/invalid/expired/rotated elsewhere)

  /api/auth/logout:
    post:
      summary: Logout (revoke refresh)
      description: >
        Deletes the stored refresh token tied to the cookie and clears the cookie.  
        Clients should also discard any in-memory access token.
      tags: [Authentication]
      operationId: logout
      responses:
        "200":
          description: Logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  succes:
                    type: boolean
                    example: true

  /api/me:
    get:
      summary: Get authenticated user
      description: >
        Returns the authenticated userâ€™s profile. Requires a valid Bearer access token.
      tags: [Authentication]
      operationId: getMe
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Authenticated user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  succes:
                    type: boolean
                    example: true
                  me:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      username:
                        type: string
                        example: jeportie
                      email:
                        type: string
                        example: jerome@example.com
                      role:
                        type: string
                        example: player
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-09-05T14:00:00.000Z"
        "401":
          description: Unauthorized (invalid or missing token)

  /api/admin/users:
    get:
      summary: List all users (admin only)
      description: >
        Retrieves the full list of registered users. Access restricted to `admin` role.
      tags: [Admin]
      operationId: listUsers
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  succes:
                    type: boolean
                    example: true
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        username:
                          type: string
                          example: jeportie
                        email:
                          type: string
                          example: jerome@example.com
                        role:
                          type: string
                          example: admin
                        created_at:
                          type: string
                          format: date-time
                          example: "2025-09-05T14:00:00.000Z"
        "401":
          description: Unauthorized (missing/invalid token)
        "403":
          description: Forbidden (not an admin)

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
