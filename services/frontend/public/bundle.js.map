{
  "version": 3,
  "sources": ["../src/tools/routerTools.js", "../src/tools/Router.js", "../src/tools/Fetch.js", "../src/views/AbstractView.ts", "../src/views/Dashboard.ts", "../src/views/Posts.ts", "../src/views/Settings.ts", "../src/games/lib2D/GameLoop.js", "../src/games/lib2D/Keyboard.js", "../src/games/lib2D/Coord.js", "../src/games/lib2D/Vector.js", "../src/games/lib2D/Point.js", "../src/games/lib2D/AbstractEntity.js", "../src/games/lib2D/Rect.js", "../src/games/lib2D/utils.js", "../src/games/pong/Paddle.js", "../src/games/lib2D/Circle.js", "../src/games/lib2D/collision/circleRect.js", "../src/games/pong/Ball.js", "../src/games/pong/Player.js", "../src/games/lib2D/Line.js", "../src/games/pong/PongGame.js", "../src/views/Game.ts", "../src/views/NotFound.ts", "../src/main.ts"],
  "sourcesContent": ["// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   routerTools.js                                     :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/21 15:09:58 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/21 15:16:29 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nexport function pathToRegex(path) {\n    if (path === \"*\") return { regex: /.*/u, keys: [], isCatchAll: true };\n\n    const keys = [];\n    const pattern =\n        \"^\" +\n        path\n            .replace(/\\//g, \"\\\\/\")\n            .replace(/:(\\w+)/g, (_m, k) => {\n                keys.push(k);\n                return \"([^\\\\/]+)\";\n            }) +\n        \"$\";\n\n    return { regex: new RegExp(pattern, \"u\"), keys, isCatchAll: false };\n}\n\nexport function normalize(path) {\n    return path !== \"/\" ? path.replace(/\\/+$/, \"\") : \"/\";\n}\n\nexport function parseQuery(search) {\n    return Object.fromEntries(new URLSearchParams(search).entries());\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   Router.js                                          :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/21 13:55:36 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/21 15:18:18 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport { pathToRegex, normalize, parseQuery } from \"./routerTools.js\";\n\nexport default class Router {\n    constructor(opts) {\n        this.routes = opts.routes.map((r) => {\n            const { regex, keys, isCatchAll } = pathToRegex(r.path);\n            return { path: r.path, view: r.view, regex, keys, isCatchAll };\n        });\n\n        this.notFound =\n            this.routes.find((r) => r.isCatchAll) ||\n            (opts.notFoundPath\n                ? this.routes.find((r) => r.path === opts.notFoundPath)\n                : undefined);\n\n        const m = document.querySelector(opts.mountSelector ?? \"#app\");\n        if (!m) throw new Error(\"Router: mount element not found\");\n        this.mountEl = m;\n\n        this.linkSelector = opts.linkSelector ?? \"[data-link]\";\n        this.onBeforeNavigate = opts.onBeforeNavigate;\n        this.currentView = null;\n        this.started = false;\n\n        this.handlePopState = this.handlePopState.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    start() {\n        if (this.started) return;\n        this.started = true;\n\n        window.addEventListener(\"popstate\", this.handlePopState);\n        document.body.addEventListener(\"click\", this.handleClick);\n\n        this.render();\n    }\n\n    stop() {\n        if (!this.started) return;\n        this.started = false;\n\n        window.removeEventListener(\"popstate\", this.handlePopState);\n        document.body.removeEventListener(\"click\", this.handleClick);\n    }\n\n    navigateTo(url, opts) {\n        if (this.onBeforeNavigate && this.onBeforeNavigate(url) === false) return;\n\n        if (opts?.replace) history.replaceState(opts?.state ?? null, \"\", url);\n        else history.pushState(opts?.state ?? null, \"\", url);\n\n        this.render();\n    }\n\n    handlePopState() {\n        this.render();\n    }\n\n    handleClick(e) {\n        if (e.defaultPrevented) return;\n        if (e.button !== 0) return;\n        if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey) return;\n\n        const a = e.target.closest(this.linkSelector);\n        if (!a) return;\n\n        if (\n            a.target === \"_blank\" ||\n            a.hasAttribute(\"download\") ||\n            a.getAttribute(\"rel\") === \"external\"\n        )\n            return;\n\n        const url = new URL(a.href, window.location.origin);\n        if (url.origin !== window.location.origin) return;\n        if (url.pathname.startsWith(\"/api/\")) return;\n\n        e.preventDefault();\n        const next = url.pathname + url.search;\n        this.navigateTo(next);\n    }\n\n    match(pathname) {\n        for (const r of this.routes) {\n            const m = pathname.match(r.regex);\n            if (!m) continue;\n\n            const values = m.slice(1);\n            const params = {};\n            r.keys.forEach((k, i) => {\n                params[k] = decodeURIComponent(values[i] ?? \"\");\n            });\n            return { route: r, params };\n        }\n        return null;\n    }\n\n    buildContext(pathname, params) {\n        return {\n            path: pathname,\n            params,\n            query: parseQuery(window.location.search),\n            state: history.state,\n        };\n    }\n\n    async render() {\n        const pathname = normalize(window.location.pathname);\n\n        const m = this.match(pathname);\n        const route = m?.route || this.notFound;\n        const params = m?.params || {};\n\n        if (!route) {\n            this.mountEl.innerHTML = \"<h1>Not Found</h1>\";\n            return;\n        }\n\n        this.currentView?.destroy?.();\n\n        const ctx = this.buildContext(pathname, params);\n        const view = new route.view(ctx);\n\n        const html = await view.getHTML();\n        this.mountEl.innerHTML = typeof html === \"string\" ? html : String(html);\n        this.currentView = view;\n        view.mount?.();\n    }\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   Fetch.js                                           :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/21 14:04:55 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/21 14:05:42 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nexport default class Fetch {\n    constructor(baseURL) {\n        this.baseURL = baseURL;\n    }\n\n    get(endpoint) {\n        return fetch(this.baseURL + endpoint)\n            .then(response => response.json());\n    }\n\n    put(endpoint, body) {\n        return this.#send(\"put\", endpoint, body);\n    }\n\n    post(endpoint, body) {\n        return this.#send(\"post\", endpoint, body);\n    }\n\n    delete(endpoint, body) {\n        return this.#send(\"delete\", endpoint, body);\n    }\n\n    #send(method, endpoint, body) {\n        return fetch(this.baseURL + endpoint, {\n            method,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        }).then(response => response.json());\n    }\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   AbstractView.ts                                    :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/14 18:36:41 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/19 12:40:17 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nexport type ViewCtx = {\n    path: string;\n    params: Record<string, string>;\n    query: Record<string, string>;\n    hash: string;\n    state: any;\n};\n\nexport default class AbstractView {\n    protected ctx: ViewCtx;\n\n    constructor(ctx: ViewCtx) {\n        this.ctx = ctx;\n\n        console.log(this.ctx);\n    };\n\n    setTitle(title: string) {\n        document.title = title;\n    };\n\n    async getHTML() {\n        return \"\";\n    }\n\n    mount(): void { }                       // bind DOM events here\n\n    destroy(): void { }                     // cleanup timers/sockets/listeners\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   Dashboard.ts                                       :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/14 18:39:16 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/19 20:05:42 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport AbstractView from \"./AbstractView.js\";\n\nexport default class Dashboard extends AbstractView {\n    constructor(ctx: any) {\n        super(ctx);\n        this.ctx = ctx;\n        this.setTitle(\"Dashboard\");\n    };\n\n    async getHTML() {\n        return /*html*/ `\n      <div class=\"grid md:grid-cols-[220px_1fr] gap-6 p-6\">\n        <aside class=\"bg-slate-800/60 rounded-xl p-4 border border-slate-700\">\n          <h2 class=\"text-lg font-semibold mb-3\">Menu</h2>\n          <nav class=\"flex flex-col gap-2\">\n            <a href=\"/\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Dashboard</a>\n            <a href=\"/posts\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Posts</a>\n            <a href=\"/settings\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Settings</a>\n            <a href=\"/game\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Game</a>\n          </nav>\n        </aside>\n        <main class=\"space-y-4\">\n          <h1 class=\"text-2xl font-bold\">Dashboard</h1>\n          <div class=\"rounded-xl border border-slate-700 bg-slate-800/60 p-4\">\n            <p class=\"text-slate-300\">Welcome to your SPA dashboard!</p>\n          </div>\n        </main>\n      </div>\n    `;\n    }\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   Posts.ts                                           :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/14 19:12:34 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/19 20:06:05 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport AbstractView from \"./AbstractView.js\";\n\nexport default class Posts extends AbstractView {\n    constructor(ctx: any) {\n        super(ctx);\n        this.setTitle(\"Posts\");\n    }\n\n    async getHTML() {\n        return /*html*/ `\n    <div class=\"grid md:grid-cols-[220px_1fr] gap-6 p-6\">\n      <aside class=\"bg-slate-800/60 rounded-xl p-4 border border-slate-700\">\n        <h2 class=\"text-lg font-semibold mb-3\">Menu</h2>\n        <nav class=\"flex flex-col gap-2\">\n          <a href=\"/\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Dashboard</a>\n          <a href=\"/posts\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Posts</a>\n          <a href=\"/settings\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Settings</a>\n          <a href=\"/game\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Game</a>\n        </nav>\n      </aside>\n\n      <main class=\"space-y-4\">\n        <h1 class=\"text-2xl font-bold\">Posts</h1>\n\n        <div class=\"rounded-xl border border-slate-700 bg-slate-800/60 p-4\">\n          <p class=\"text-slate-300 mb-2\">Recent posts</p>\n          <ul class=\"space-y-2\">\n            <li><a href=\"/posts/1\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60 inline-block\">Routing without frameworks</a></li>\n            <li><a href=\"/posts/2\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60 inline-block\">State management 101</a></li>\n            <li><a href=\"/posts/3\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60 inline-block\">Fastify tips</a></li>\n          </ul>\n        </div>\n      </main>\n    </div>\n  `;\n    }\n\n\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   Settings.ts                                        :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/14 19:19:28 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/19 20:06:17 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport AbstractView from \"./AbstractView.js\";\n\nexport default class Settings extends AbstractView {\n    constructor(ctx: any) {\n        super(ctx);\n        this.setTitle(\"Settings\");\n    };\n\n    async getHTML() {\n        return /*html*/ `\n    <div class=\"grid md:grid-cols-[220px_1fr] gap-6 p-6\">\n      <aside class=\"bg-slate-800/60 rounded-xl p-4 border border-slate-700\">\n        <h2 class=\"text-lg font-semibold mb-3\">Menu</h2>\n        <nav class=\"flex flex-col gap-2\">\n          <a href=\"/\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Dashboard</a>\n          <a href=\"/posts\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Posts</a>\n          <a href=\"/settings\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Settings</a>\n          <a href=\"/game\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Game</a>\n        </nav>\n      </aside>\n\n      <main class=\"space-y-4\">\n        <h1 class=\"text-2xl font-bold\">Settings</h1>\n\n        <div class=\"rounded-xl border border-slate-700 bg-slate-800/60 p-4\">\n          <form id=\"settings-form\" class=\"space-y-4\">\n            <div>\n              <label for=\"name\" class=\"block mb-1\">Display name</label>\n              <input id=\"name\" name=\"name\" type=\"text\" placeholder=\"Your name\"\n                class=\"w-full px-3 py-2 rounded border border-slate-700 bg-slate-900 focus:outline-none\" />\n            </div>\n\n            <div>\n              <label for=\"theme\" class=\"block mb-1\">Theme</label>\n              <select id=\"theme\" name=\"theme\"\n                class=\"w-full px-3 py-2 rounded border border-slate-700 bg-slate-900 focus:outline-none\">\n                <option value=\"dark\">Dark</option>\n                <option value=\"light\">Light</option>\n              </select>\n            </div>\n\n            <button type=\"submit\"\n              class=\"px-4 py-2 rounded bg-blue-600 hover:bg-blue-700 text-white\">\n              Save\n            </button>\n          </form>\n        </div>\n      </main>\n    </div>\n  `;\n    }\n\n\n\n\n    mount() {\n        const form = document.getElementById(\"settings-form\") as HTMLFormElement | null;\n        form?.addEventListener(\"submit\", async (e) => {\n            e.preventDefault();                            // no full page reload \u2705\n            const data = Object.fromEntries(new FormData(form).entries());\n            console.log(\"Settings submit:\", data);\n\n            // Later: real API call\n            // await fetch(\"/api/settings\", {\n            //   method: \"POST\",\n            //   headers: { \"Content-Type\": \"application/json\" },\n            //   body: JSON.stringify(data),\n            // });\n        });\n    }\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   GameLoop.js                                        :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/21 11:45:00 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/20 14:00:04 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\n/**\n * A minimal game loop utility that wraps requestAnimationFrame and provides\n * delta-time (dt) updates. Includes an optional FPS overlay for debugging.\n */\nexport default class GameLoop {\n    /**\n     * Creates a new GameLoop.\n     * @param {function(number, GameLoop):void} update - The function called each frame.\n     *        It receives the delta time (in seconds) and the loop instance.\n     */\n    constructor(update) {\n        this.update = update;\n        this.last = 0;\n        this.running = false;\n\n        /** @type {boolean} Whether to show the FPS overlay. */\n        this.showFPS = false;\n\n        /** @type {number} The last calculated frames-per-second value. */\n        this.fps = 0;\n    }\n\n    /**\n     * Starts the game loop. Does nothing if already running.\n     * @returns {void}\n     */\n    start() {\n        if (this.running) return;\n        this.running = true;\n        this.last = performance.now();\n        const step = (t) => {\n            if (!this.running) return;\n            const dt = (t - this.last) / 1000; // seconds\n            this.last = t;\n\n            // calculate fps\n            this.fps = Math.round(1 / dt);\n\n            this.update(dt, this);\n            this._renderOverlay();\n\n            requestAnimationFrame(step);\n        };\n        requestAnimationFrame(step);\n    }\n\n    /**\n     * Stops the game loop.\n     * @returns {void}\n     */\n    stop() { this.running = false; }\n\n    /**\n     * Toggles the debug FPS overlay on or off.\n     * @returns {void}\n     */\n    toggleFPS() {\n        this.showFPS = !this.showFPS;\n    }\n\n    /**\n     * Internal helper: renders the FPS overlay in the top-left corner if enabled.\n     * @private\n     * @returns {void}\n     */\n    _renderOverlay() {\n        if (!this.showFPS) return;\n        const ctx = document.querySelector(\"canvas\").getContext(\"2d\");\n        ctx.fillStyle = \"lime\";\n        ctx.font = \"14px monospace\";\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"top\";\n        ctx.fillText(`FPS: ${this.fps}`, 5, 5);\n    }\n}\n\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   Keyboard.js                                        :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/20 15:14:47 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/20 15:18:38 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\n/**\n * Minimal keyboard helper.\n */\nexport default class Keyboard {\n    constructor(target = window) {\n        this.down = new Set();\n        target.addEventListener(\"keydown\", (e) => this.down.add(e.key));\n        target.addEventListener(\"keyup\", (e) => this.down.delete(e.key));\n    }\n    /**\n     * Is a key currently held?\n     * @param {string} key\n     * @returns {boolean}\n     */\n    isDown(key) { return this.down.has(key); }\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   Coord.js                                           :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/06 20:20:31 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/07 15:10:17 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\n/**\n * Represents a 2D coordinate point.\n */\nexport default class Coord {\n    /**\n     * Creates a new Coord instance.\n     * @param {number} x - The x-coordinate.\n     * @param {number} y - The y-coordinate.\n     */\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * Creates a copy of this coordinate.\n     * @returns {Coord} A new Coord instance with the same x and y values.\n     */\n    copy() {\n        return new this.constructor(this.x, this.y);\n    }\n\n    /**\n     * Adds another Coord to this one without modifying the original.\n     * @param {Coord} src - The source Coord to add.\n     * @returns {Coord} A new Coord representing the sum.\n     */\n    add(src) {\n        return new this.constructor(this.x + src.x, this.y + src.y);\n    }\n\n    /**\n     * Adds another Coord to this one, modifying this instance.\n     * @param {Coord} src - The source Coord to add.\n     * @returns {Coord} This instance after addition.\n     */\n    addSelf(src) {\n        this.x += src.x;\n        this.y += src.y;\n        return this;\n    }\n\n    /**\n     * Subtracts another Coord from this one without modifying the original.\n     * @param {Coord} src - The source Coord to subtract.\n     * @returns {Coord} A new Coord representing the difference.\n     */\n    sub(src) {\n        return new this.constructor(this.x - src.x, this.y - src.y);\n    }\n\n    /**\n     * Subtracts another Coord from this one, modifying this instance.\n     * @param {Coord} src - The source Coord to subtract.\n     * @returns {Coord} This instance after subtraction.\n     */\n    subSelf(src) {\n        this.x -= src.x;\n        this.y -= src.y;\n        return this;\n    }\n\n    /**\n     * Scales this coordinate by a factor without modifying the original.\n     * @param {number} factor - The scale factor.\n     * @returns {Coord} A new Coord scaled by the given factor.\n     */\n    scale(factor) {\n        return new this.constructor(this.x * factor, this.y * factor);\n    }\n\n    /**\n     * Scales this coordinate by a factor, modifying this instance.\n     * @param {number} factor - The scale factor.\n     * @returns {Coord} This instance after scaling.\n     */\n    scaleSelf(factor) {\n        this.x *= factor;\n        this.y *= factor;\n        return this;\n    }\n\n    /**\n     * Divides this coordinate by a factor without modifying the original.\n     * @param {number} factor - The divisor.\n     * @returns {Coord} A new Coord divided by the given factor.\n     */\n    div(factor) {\n        return new this.constructor(this.x / factor, this.y / factor);\n    }\n\n    /**\n     * Divides this coordinate by a factor, modifying this instance.\n     * @param {number} factor - The divisor.\n     * @returns {Coord} This instance after division.\n     */\n    divSelf(factor) {\n        this.x /= factor;\n        this.y /= factor;\n        return this;\n    }\n\n    /**\n     * Negates this coordinate without modifying the original.\n     * @returns {Coord} A new Coord with both x and y negated.\n     */\n    negate() {\n        return new this.constructor(-this.x, -this.y);\n    }\n\n    /**\n     * Negates this coordinate, modifying this instance.\n     * @returns {Coord} This instance after negation.\n     */\n    negateSelf() {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n\n    /**\n     * Checks if this coordinate is equal to another.\n     * @param {Coord} src - The source Coord to compare.\n     * @returns {boolean} True if both x and y are equal, otherwise false.\n     */\n    equals(src) {\n        return this.x === src.x && this.y === src.y;\n    }\n\n    /**\n     * Calculates the Euclidean distance to another coordinate.\n     * @param {Coord} src - The source Coord to measure distance to.\n     * @returns {number} The distance between this and the source coordinate.\n     */\n    distanceTo(src) {\n        const dx = this.x - src.x;\n        const dy = this.y - src.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    /**\n     * Returns a string representation of this coordinate.\n     * @returns {string} The string in the form '(x, y)'.\n     */\n    toString() {\n        return `(${this.x}, ${this.y})`;\n    }\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   Vector.js                                          :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/04 18:25:36 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/20 14:07:36 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport Coord from \"./Coord.js\"\n\n/**\n * Represents a 2D vector with magnitude and direction, extending Coord.\n * @extends Coord\n */\nexport default class Vector extends Coord {\n\n    /**\n     * Factory: create a Vector from raw x,y.\n     * @param {number} x\n     * @param {number} y\n     * @returns {Vector}\n     */\n    static from(x, y) {\n        return new Vector(x, y);\n    }\n\n    /**\n     * Gets the magnitude (length) of the vector.\n     * @type {number}\n     */\n    get magnitude() {\n        return Math.hypot(this.x, this.y);\n    }\n\n    /**\n     * Returns a new normalized (unit length) vector in the same direction.\n     * @returns {Vector} A new Vector with magnitude 1 (or zero vector if original is zero).\n     */\n    normalize() {\n        const mag = this.magnitude || 1;\n        return new Vector(this.x / mag, this.y / mag);\n    }\n\n    /**\n     * Returns a new vector with its Y component inverted.\n     * @returns {Vector} A new Vector reflected over the X-axis.\n     */\n    invertY() {\n        return new Vector(this.x, -this.y);\n    }\n\n    /**\n     * Returns a new vector with its X component inverted.\n     * @returns {Vector} A new Vector reflected over the Y-axis.\n     */\n    invertX() {\n        return new Vector(-this.x, this.y);\n    }\n\n    /**\n     * Rotates the vector by a given angle around the origin.\n     * @param {number} angleRad - The rotation angle in radians.\n     * @returns {Vector} A new Vector representing the rotated vector.\n     */\n    rotate(angleRad) {\n        const cos = Math.cos(angleRad);\n        const sin = Math.sin(angleRad);\n        return new Vector(\n            this.x * cos - this.y * sin,\n            this.x * sin + this.y * cos\n        );\n    }\n\n    /**\n     * Returns a new vector with the same direction but a different magnitude.\n     * @param {number} newMag - The desired magnitude for the new vector.\n     * @returns {Vector} A new Vector scaled to the specified magnitude.\n     */\n    withMagnitude(newMag) {\n        return this.normalize().scale(newMag);\n    }\n\n    /**\n     * Computes the dot product between this vector and another.\n     * @param {Vector} other - The other vector.\n     * @returns {number} The scalar dot product (this \u00B7 other).\n     */\n    dot(other) {\n        if (!(other instanceof Vector)) {\n            throw new TypeError(\"Vector.dot requires a Vector\");\n        }\n        return this.x * other.x + this.y * other.y;\n    }\n\n    /**\n     * Computes the 2D cross product (scalar) between this vector and another.\n     * @param {Vector} other - The other vector.\n     * @returns {number} The scalar cross product (this \u00D7 other) in 2D.\n     */\n    cross(other) {\n        if (!(other instanceof Vector)) {\n            throw new TypeError(\"Vector.cross requires a Vector\");\n        }\n        return this.x * other.y - this.y * other.x;\n    }\n\n    /**\n     * Renders this vector as an arrow from an origin point (ox, oy).\n     * If no origin is provided, the vector is drawn from (0,0).\n     * @param {CanvasRenderingContext2D} ctx - The 2D drawing context.\n     * @param {Object} [options] - Rendering options.\n     * @param {number} [options.ox=0] - X coordinate of the origin.\n     * @param {number} [options.oy=0] - Y coordinate of the origin.\n     * @param {string} [options.strokeStyle=\"#0ff\"] - Color of the arrow line.\n     * @param {number} [options.lineWidth=2] - Thickness of the arrow line.\n     * @param {number} [options.headSize=8] - Size of the arrow head.\n     * @returns {void}\n     */\n    render(ctx, { ox = 0, oy = 0, color = \"#0ff\", lineWidth = 2, headSize = 8 } = {}) {\n        // draw line\n        ctx.beginPath();\n        ctx.moveTo(ox, oy);\n        ctx.lineTo(ox + this.x, oy + this.y);\n        ctx.strokeStyle = color;\n        ctx.lineWidth = lineWidth;\n        ctx.stroke();\n        ctx.closePath();\n\n        // draw head\n        const angle = Math.atan2(this.y, this.x);\n        const endX = ox + this.x;\n        const endY = oy + this.y;\n        ctx.beginPath();\n        ctx.moveTo(endX, endY);\n        ctx.lineTo(endX - headSize * Math.cos(angle - Math.PI / 6),\n            endY - headSize * Math.sin(angle - Math.PI / 6));\n        ctx.lineTo(endX - headSize * Math.cos(angle + Math.PI / 6),\n            endY - headSize * Math.sin(angle + Math.PI / 6));\n        ctx.lineTo(endX, endY);\n        ctx.stroke();\n        ctx.closePath();\n    }\n\n    /**\n     * (Optional) Render only the vector endpoint as a single pixel (like Point).\n     * Useful for a \u201Cpixel philosophy\u201D debug view.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Object} [options]\n     * @param {number} [options.ox=0]\n     * @param {number} [options.oy=0]\n     * @param {string} [options.color=\"#fff\"]\n     * @returns {void}\n     */\n    renderAsPixel(ctx, { ox = 0, oy = 0, color = \"#fff\" } = {}) {\n        ctx.fillStyle = color;\n        ctx.fillRect(ox + this.x, oy + this.y, 1, 1);\n    }\n\n    /**\n     * Reflect this vector on a horizontal or vertical wall, with optional angle adjustment.\n     * @param {\"x\"|\"y\"} axis - Axis of reflection (\"x\" for vertical wall, \"y\" for horizontal wall).\n     * @param {number} [angle=0] - Extra angle (in radians) to rotate the reflected vector.\n     *        Positive = counter-clockwise, Negative = clockwise.\n     * @returns {Vector} A new reflected and rotated vector.\n     */\n    reflect(axis, angle = 0) {\n        let reflected;\n        if (axis === \"x\") {\n            reflected = new Vector(-this.x, this.y);\n        } else if (axis === \"y\") {\n            reflected = new Vector(this.x, -this.y);\n        } else {\n            throw new Error(\"Vector.reflect axis must be 'x' or 'y'\");\n        }\n\n        if (angle !== 0) {\n            reflected = reflected.rotate(angle);\n        }\n        return reflected;\n    }\n}\n\n/* Optional sugar\n *\n *In Vector, you could add a .clone() alias for copy(), or a .toPoint() if you ever need to treat a vector as a point.\n * */\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   Point.js                                           :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/07 14:57:33 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/20 14:05:46 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport Coord from \"./Coord.js\"\nimport Vector from \"./Vector.js\"\n\n/**\n * Represents a 2D point that can be translated, extending Coord.\n * @extends Coord\n */\nexport default class Point extends Coord {\n    /**\n     * Factory: create a Point from raw x,y.\n     * @param {number} x\n     * @param {number} y\n     * @returns {Point}\n     */\n    static from(x, y) {\n        return new Point(x, y);\n    }\n\n    /**\n     * Translates this point by the given vector, modifying this instance.\n     * @param {Vector} vector - The translation vector.\n     * @returns {Point} This instance after translation.\n     */\n    translate(vector) {\n        if (!(vector instanceof Vector))\n            throw new TypeError(\"Point.translate requires a Vector object\");\n\n        return (this.addSelf(vector));\n    }\n\n    /**\n        * Add a Vector to this Point \u2192 new Point.\n        * @param {Vector} v\n        * @returns {Point}\n     */\n    add(vector) {\n        if (!(vector instanceof Vector))\n            throw new TypeError(\"Point.add requires a Vector object\");\n\n        const { x, y } = super.add(vector);\n        return (new Point(x, y));\n    }\n\n    /**\n     * In-place add a Vector to this Point \u2192 this Point.\n     * @param {Vector} vector\n     * @returns {Point}\n     */\n    addSelf(vector) {\n        if (!(vector instanceof Vector))\n            throw new TypeError(\"Point.addSelf requires a Vector object\");\n\n        super.addSelf(vector);\n        return (this);\n    }\n\n    /**\n     * Subtracts another Point from this one, yielding a Vector from the other point to this one.\n     * @param {Point} pt - The point to subtract.\n     * @returns {Vector} A new Vector representing (this \u2212 pt).\n     */\n    sub(point) {\n        if (!(point instanceof Point))\n            throw new TypeError(\"Point.sub requires a Point object\");\n\n        const { x, y } = super.sub(point);\n        return (new Vector(x, y));\n    }\n\n    /**\n     * In-place subtract another Point from this one, converting this Point into the resulting Vector coordinates.\n     * @param {Point} point - The point to subtract.\n     * @returns {Point} This instance, now mutated to the Vector difference.\n     */\n    subSelf(point) {\n        if (!(point instanceof Point))\n            throw new TypeError(\"Point.subSelf requires a Point object\");\n\n        const vector = this.sub(point);\n        this.x = vector.x;\n        this.y = vector.y;\n        return (this);\n    }\n\n    /**\n     * Renders this point as a single pixel on the canvas.\n     * @param {CanvasRenderingContext2D} ctx - The 2D drawing context.\n     * @param {Object} [options] - Rendering options.\n     * @param {string} [options.color=\"#fff\"] - Fill color of the pixel.\n     * @returns {void}\n     */\n    render(ctx, { color = \"#fff\" } = {}) {\n        ctx.fillStyle = color;\n        ctx.fillRect(this.x, this.y, 1, 1);\n    }\n\n    /**\n     * Moves this point in place by a velocity vector, scaled by delta time.\n     * @param {Vector} velocity - The velocity to apply.\n     * @param {number} dt - Delta time in seconds.\n     * @returns {Point} This instance after moving.\n     */\n    move(velocity, dt = 1) {\n        if (!(velocity instanceof Vector))\n            throw new TypeError(\"Point.move requires a Vector\");\n        this.x += velocity.x * dt;\n        this.y += velocity.y * dt;\n        return this;\n    }\n\n    /**\n     * Checks if this point is inside a rectangle.\n     * @param {number} x - Rect X.\n     * @param {number} y - Rect Y.\n     * @param {number} w - Rect width.\n     * @param {number} h - Rect height.\n     * @returns {boolean} True if inside, false otherwise.\n     */\n    isInsideRect(x, y, w, h) {\n        return this.x >= x && this.x <= x + w && this.y >= y && this.y <= y + h;\n    }\n}\n\n/* Optional sugar\n\nYou might add a Point.subtractVector(v: Vector): Point so that point.subVector(vector) gives you a new point \u201Cmoved back\u201D by a vector, rather than overloading subSelf. */\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   AbstractEntity.js                                  :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/20 14:25:54 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/20 14:28:14 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport Point from \"./Point.js\";\nimport Vector from \"./Vector.js\";\n\n/**\n * Minimal base for \u201Cthings that move and render\u201D.\n * Uses composition: a position Point and a velocity Vector.\n */\nexport default class AbstractEntity {\n    /**\n     * @param {number} x - Initial X position.\n     * @param {number} y - Initial Y position.\n     */\n    constructor(x = 0, y = 0) {\n        /** @type {Point} World position of the entity. */\n        this.pos = new Point(x, y);\n        /** @type {Vector} Velocity in pixels per second. */\n        this.vel = new Vector(0, 0);\n        /** @type {boolean} Whether the entity should update/render. */\n        this.alive = true;\n    }\n\n    /**\n     * Move by velocity * dt.\n     * @param {number} dt - Delta time (seconds).\n     * @returns {void}\n     */\n    update(dt) {\n        this.pos.move(this.vel, dt);\n    }\n\n    /**\n     * Render the entity. Override in subclasses.\n     * @param {CanvasRenderingContext2D} _ctx\n     * @returns {void}\n     */\n    render(_ctx) { }\n\n    /**\n     * Reflect velocity on axis with optional deflection angle (radians).\n     * @param {\"x\"|\"y\"} axis\n     * @param {number} [angle=0]\n     * @returns {void}\n     */\n    bounce(axis, angle = 0) {\n        this.vel = this.vel.reflect(axis, angle);\n    }\n\n    /**\n     * Draws a tiny velocity arrow for debugging.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Object} [options]\n     * @param {string} [options.color=\"#0ff\"]\n     * @returns {void}\n     */\n    renderVelocity(ctx, { color = \"#0ff\" } = {}) {\n        this.vel.render(ctx, { ox: this.pos.x, oy: this.pos.y, color, lineWidth: 1, headSize: 6 });\n    }\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   Rect.js                                            :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/20 14:29:46 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/20 14:42:28 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport AbstractEntity from \"./AbstractEntity.js\";\n\n/**\n * Axis-aligned rectangle entity, anchored at top-left (pos.x, pos.y).\n */\nexport default class Rect extends AbstractEntity {\n    /**\n     * @param {number} x - Top-left X.\n     * @param {number} y - Top-left Y.\n     * @param {number} w - Width.\n     * @param {number} h - Height.\n     */\n    constructor(x, y, w, h) {\n        super(x, y);\n    /** @type {number} */ this.w = w;\n    /** @type {number} */ this.h = h;\n    }\n\n    /**\n     * Render the rectangle.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Object} [options]\n     * @param {string|null} [options.fill=\"#fff\"]\n     * @param {string|null} [options.stroke=null]\n     * @param {number} [options.lineWidth=1]\n     * @returns {void}\n     */\n    render(ctx, { fill = \"#fff\", stroke = null, lineWidth = 1 } = {}) {\n        if (fill) { ctx.fillStyle = fill; ctx.fillRect(this.pos.x, this.pos.y, this.w, this.h); }\n        if (stroke) { ctx.strokeStyle = stroke; ctx.lineWidth = lineWidth; ctx.strokeRect(this.pos.x, this.pos.y, this.w, this.h); }\n    }\n\n    /**\n     * Point-in-rect test.\n     * @param {number} x\n     * @param {number} y\n     * @returns {boolean}\n     */\n    contains(x, y) {\n        return (\n            x >= this.pos.x &&\n            x <= this.pos.x + this.w &&\n            y >= this.pos.y &&\n            y <= this.pos.y + this.h\n        );\n    }\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   utils.js                                           :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/20 15:18:58 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/20 15:20:15 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\n/** Clamp v into [min, max]. */\nexport function clamp(v, min, max) {\n    return Math.max(min, Math.min(max, v));\n}\n\n/** Degrees \u2192 radians. */\nexport const deg2rad = (d) => (d * Math.PI) / 180;\n/** Radians \u2192 degrees. */\nexport const rad2deg = (r) => (r * 180) / Math.PI;\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   Paddle.js                                          :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/20 15:23:11 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/20 15:27:09 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport Rect from \"../lib2D/Rect.js\";\nimport { clamp } from \"../lib2D/utils.js\";\n\n/**\n * Simple vertical paddle (extends Rect).\n * Reads input via a provided keyboard + keys.\n */\nexport default class Paddle extends Rect {\n    /**\n     * @param {number} x\n     * @param {number} y\n     * @param {number} w\n     * @param {number} h\n     * @param {Object} opts\n     * @param {number} [opts.speed=360] - pixels per second\n     * @param {Keyboard} [opts.keyboard] - keyboard helper\n     * @param {string} [opts.keyUp=\"ArrowUp\"]\n     * @param {string} [opts.keyDown=\"ArrowDown\"]\n     * @param {number} [opts.canvasHeight] - for clamping\n     * @param {string} [opts.color=\"#fff\"]\n     */\n    constructor(x, y, w, h, { speed = 360, keyboard = null, keyUp = \"ArrowUp\", keyDown = \"ArrowDown\",\n        canvasHeight = null, color = \"#fff\", } = {}) {\n        super(x, y, w, h);\n        this.speed = speed;\n        this.keyboard = keyboard;\n        this.keyUp = keyUp;\n        this.keyDown = keyDown;\n        this.canvasHeight = canvasHeight;\n        this.color = color;\n        this.moveDir = 0; // -1 up, +1 down, 0 idle (useful to influence ball bounce)\n    }\n\n    update(dt) {\n        // manual velocity: up/down keys\n        let dy = 0;\n        if (this.keyboard?.isDown(this.keyUp)) dy -= 1;\n        if (this.keyboard?.isDown(this.keyDown)) dy += 1;\n        this.moveDir = dy;\n        this.pos.y += dy * this.speed * dt;\n\n        if (this.canvasHeight != null) {\n            this.pos.y = clamp(this.pos.y, 0, this.canvasHeight - this.h);\n        }\n    }\n\n    render(ctx) {\n        super.render(ctx, { fill: this.color });\n    }\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   Circle.js                                          :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/20 14:28:28 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/20 14:29:25 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport AbstractEntity from \"./AbstractEntity.js\";\n\n/**\n * Simple circle entity (centered at pos).\n */\nexport default class Circle extends AbstractEntity {\n    /**\n     * @param {number} x - Center X.\n     * @param {number} y - Center Y.\n     * @param {number} r - Radius.\n     */\n    constructor(x, y, r) {\n        super(x, y);\n        /** @type {number} */\n        this.r = r;\n    }\n\n    /**\n     * Render the circle.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Object} [options]\n     * @param {string|null} [options.fill=\"#fff\"]\n     * @param {string|null} [options.stroke=null]\n     * @param {number} [options.lineWidth=1]\n     * @returns {void}\n     */\n    render(ctx, { fill = \"#fff\", stroke = null, lineWidth = 1 } = {}) {\n        ctx.beginPath();\n        ctx.arc(this.pos.x, this.pos.y, this.r, 0, Math.PI * 2);\n        if (fill) { ctx.fillStyle = fill; ctx.fill(); }\n        if (stroke) { ctx.strokeStyle = stroke; ctx.lineWidth = lineWidth; ctx.stroke(); }\n        ctx.closePath();\n    }\n\n    /**\n     * Point-in-circle test.\n     * @param {number} x\n     * @param {number} y\n     * @returns {boolean}\n     */\n    contains(x, y) {\n        const dx = x - this.pos.x, dy = y - this.pos.y;\n        return dx * dx + dy * dy <= this.r * this.r;\n    }\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   circleRect.js                                      :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/20 15:01:12 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/20 15:02:02 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\n/**\n * Clamp a value to a [min, max] interval.\n * @param {number} v\n * @param {number} lo\n * @param {number} hi\n * @returns {number}\n */\nfunction clamp(v, lo, hi) {\n    return Math.max(lo, Math.min(hi, v));\n}\n\n/**\n * Circle vs axis-aligned rect collision (rect at x,y with width w and height h).\n * Returns collision state, contact normal (from rect to circle), and penetration.\n * @param {{x:number,y:number,r:number}} circle - circle center (x,y) and radius r.\n * @param {{x:number,y:number,w:number,h:number}} rect - rect top-left (x,y) and size.\n * @returns {{collides:boolean, normal:{x:number,y:number}, penetration:number, closest:{x:number,y:number}}}\n */\nexport function collideCircleRect(circle, rect) {\n    const cx = clamp(circle.x, rect.x, rect.x + rect.w);\n    const cy = clamp(circle.y, rect.y, rect.y + rect.h);\n    const dx = circle.x - cx;\n    const dy = circle.y - cy;\n    const dist = Math.hypot(dx, dy);\n\n    if (dist >= circle.r || dist === 0) {\n        // no overlap or center exactly on corner/edge point\n        let nx = 0, ny = 0;\n        if (dist > 0) { nx = dx / dist; ny = dy / dist; }\n        else {\n            // pick a normal pointing outwards based on shallowest axis\n            const left = Math.abs(circle.x - rect.x);\n            const right = Math.abs(circle.x - (rect.x + rect.w));\n            const top = Math.abs(circle.y - rect.y);\n            const bottom = Math.abs(circle.y - (rect.y + rect.h));\n            const m = Math.min(left, right, top, bottom);\n            if (m === left) nx = -1; else if (m === right) nx = 1; else if (m === top) ny = -1; else ny = 1;\n        }\n        return { collides: false, normal: { x: nx, y: ny }, penetration: 0, closest: { x: cx, y: cy } };\n    }\n\n    return {\n        collides: true,\n        normal: { x: dx / dist, y: dy / dist },\n        penetration: circle.r - dist,\n        closest: { x: cx, y: cy }\n    };\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   Ball.js                                            :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/20 15:30:07 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/20 15:30:56 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport Circle from \"../lib2D/Circle.js\";\nimport Vector from \"../lib2D/Vector.js\";\nimport { collideCircleRect } from \"../lib2D/collision/index.js\";\nimport { deg2rad } from \"../lib2D/utils.js\";\n\n/**\n * Pong ball with simple serve + paddle/canvas bounce.\n */\nexport default class Ball extends Circle {\n    /**\n     * @param {number} cx\n     * @param {number} cy\n     * @param {number} r\n     * @param {Object} opts\n     * @param {number} [opts.speed=380] - pixels per second\n     * @param {number} [opts.serveAngleSpreadDeg=20] - random spread around straight line\n     * @param {string} [opts.color=\"#25AEEE\"]\n     */\n    constructor(cx, cy, r, { speed = 380, serveAngleSpreadDeg = 20, color = \"#25AEEE\" } = {}) {\n        super(cx, cy, r);\n        this.baseSpeed = speed;\n        this.serveSpread = deg2rad(serveAngleSpreadDeg);\n        this.color = color;\n    }\n\n    /**\n     * Serve the ball toward left (-1) or right (+1).\n     * @param {number} dir -1 or +1\n     */\n    serve(dir = 1) {\n        const spread = (Math.random() * this.serveSpread) - this.serveSpread / 2;\n        const angle = (dir > 0 ? 0 : Math.PI) + spread;\n        const vx = Math.cos(angle) * this.baseSpeed;\n        const vy = Math.sin(angle) * this.baseSpeed;\n        this.vel = new Vector(vx, vy);\n    }\n\n    /**\n     * Bounce on top/bottom walls.\n     * @param {number} width\n     * @param {number} height\n     */\n    bounceCanvas(width, height) {\n        if (this.pos.y - this.r <= 0) {\n            this.pos.y = this.r;\n            this.vel = this.vel.reflect(\"y\");\n        } else if (this.pos.y + this.r >= height) {\n            this.pos.y = height - this.r;\n            this.vel = this.vel.reflect(\"y\");\n        }\n    }\n\n    /**\n     * Try bounce against a paddle (Rect). Adds a small angle based on paddle moveDir.\n     * @param {Rect} paddle\n     * @param {number} deflectDeg - small extra deflection\n     */\n    bouncePaddle(paddle, deflectDeg = 12) {\n        const hit = collideCircleRect(\n            { x: this.pos.x, y: this.pos.y, r: this.r },\n            { x: paddle.pos.x, y: paddle.pos.y, w: paddle.w, h: paddle.h }\n        );\n\n        if (!hit.collides) return false;\n\n        // 1) separate along normal\n        this.pos.x += hit.normal.x * hit.penetration;\n        this.pos.y += hit.normal.y * hit.penetration;\n\n        // 2) reflect; add tiny angle based on paddle movement (up/down)\n        const tweak = deg2rad(deflectDeg) * (paddle.moveDir || 0);\n        if (Math.abs(hit.normal.x) > Math.abs(hit.normal.y)) {\n            // hit on left/right face -> reflect X\n            this.vel = this.vel.reflect(\"x\", tweak);\n        } else {\n            // rare case: hitting top/bottom edge -> reflect Y\n            this.vel = this.vel.reflect(\"y\", tweak);\n        }\n\n        return true;\n    }\n\n    render(ctx) {\n        super.render(ctx, { fill: this.color });\n    }\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   Player.js                                          :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/21 15:00:00 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/20 15:29:11 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\n/**\n * Represents a Pong player with a name and score.\n */\nexport default class Player {\n    /**\n     * Creates a new Player.\n     * @param {string} [name=\"Player\"] - The name of the player.\n     */\n    constructor(name = \"Player\") {\n        /** @type {string} The player's display name. */\n        this.name = name;\n\n        /** @type {number} The player's current score. */\n        this.score = 0;\n    }\n\n    /**\n     * Adds points to the player's score.\n     * @param {number} [n=1] - The number of points to add.\n     * @returns {void}\n     */\n    addPoint(n = 1) {\n        this.score += n;\n    }\n\n    /**\n     * Resets the player's score to zero.\n     * @returns {void}\n     */\n    reset() {\n        this.score = 0;\n    }\n}\n\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   Line.js                                            :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/20 14:31:01 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/20 14:31:34 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport AbstractEntity from \"./AbstractEntity.js\";\nimport Point from \"./Point.js\";\n\n/**\n * Line segment entity defined by two points (relative to its own movement).\n * Its velocity moves both endpoints together.\n */\nexport default class Line extends AbstractEntity {\n    /**\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     */\n    constructor(x1, y1, x2, y2) {\n        super(0, 0); // we ignore pos for endpoints; we move endpoints directly\n    /** @type {Point} */ this.a = new Point(x1, y1);\n    /** @type {Point} */ this.b = new Point(x2, y2);\n    }\n\n    /**\n     * Move endpoints by velocity * dt.\n     * @param {number} dt\n     * @returns {void}\n     */\n    update(dt) {\n        this.a.move(this.vel, dt);\n        this.b.move(this.vel, dt);\n    }\n\n    /**\n     * Render the line segment.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Object} [options]\n     * @param {string} [options.color=\"#fff\"]\n     * @param {number} [options.lineWidth=2]\n     * @param {number[]} [options.dash=[]]\n     * @returns {void}\n     */\n    render(ctx, { color = \"#fff\", lineWidth = 2, dash = [] } = {}) {\n        ctx.beginPath();\n        if (dash.length) ctx.setLineDash(dash);\n        ctx.moveTo(this.a.x, this.a.y);\n        ctx.lineTo(this.b.x, this.b.y);\n        ctx.strokeStyle = color;\n        ctx.lineWidth = lineWidth;\n        ctx.stroke();\n        if (dash.length) ctx.setLineDash([]);\n        ctx.closePath();\n    }\n\n    /**\n     * Distance from a point to this segment (useful for simple hit tests).\n     * @param {number} x\n     * @param {number} y\n     * @returns {number}\n     */\n    distanceToPoint(x, y) {\n        // project point onto segment AB and clamp\n        const vx = this.b.x - this.a.x;\n        const vy = this.b.y - this.a.y;\n        const wx = x - this.a.x;\n        const wy = y - this.a.y;\n        const len2 = vx * vx + vy * vy || 1;\n        const t = Math.max(0, Math.min(1, (wx * vx + wy * vy) / len2));\n        const px = this.a.x + t * vx;\n        const py = this.a.y + t * vy;\n        const dx = x - px, dy = y - py;\n        return Math.hypot(dx, dy);\n    }\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   PongGame.js                                        :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/20 15:32:00 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/20 15:49:23 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport GameLoop from \"../lib2D/GameLoop.js\";\nimport Keyboard from \"../lib2D/Keyboard.js\";\nimport Paddle from \"./Paddle.js\";\nimport Ball from \"./Ball.js\";\nimport Player from \"./Player.js\";\nimport Line from \"../lib2D/Line.js\";\nimport Rect from \"../lib2D/Rect.js\";\n\nexport default class PongGame {\n    /**\n     * @param {HTMLCanvasElement} canvas\n     */\n    constructor(canvas, ctx) {\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.kb = new Keyboard();\n\n        // players\n        this.leftPlayer = new Player(\"Left\");\n        this.rightPlayer = new Player(\"Right\");\n\n        // paddles\n        this.leftPaddle = new Paddle(20, canvas.height / 2 - 40, 10, 80, {\n            speed: 420, keyboard: this.kb, keyUp: \"w\", keyDown: \"s\", canvasHeight: canvas.height, color: \"#FECD52\"\n        });\n        this.rightPaddle = new Paddle(canvas.width - 30, canvas.height / 2 - 40, 10, 80, {\n            speed: 420, keyboard: this.kb, keyUp: \"ArrowUp\", keyDown: \"ArrowDown\", canvasHeight: canvas.height, color: \"#57D269\"\n        });\n\n        // ball\n        this.ball = new Ball(canvas.width / 2, canvas.height / 2, 8, { speed: 380, color: \"#25AEEE\" });\n        this.ball.serve(Math.random() < 0.5 ? -1 : 1);\n\n        // loop\n        this.loop = new GameLoop((dt) => this.update(dt));\n    }\n\n    start() { this.loop.start(); }\n    stop() { this.loop.stop(); }\n\n    resetBall(dir = 1) {\n        this.ball.pos.x = this.canvas.width / 2;\n        this.ball.pos.y = this.canvas.height / 2;\n        this.ball.serve(dir);\n    }\n\n    update(dt) {\n        const canvas = this.canvas;\n\n        // update entities\n        this.leftPaddle.update(dt);\n        this.rightPaddle.update(dt);\n        this.ball.update(dt);\n\n        // world bounces\n        this.ball.bounceCanvas(canvas.width, canvas.height);\n\n        // paddle collisions\n        this.ball.bouncePaddle(this.leftPaddle, 10);\n        this.ball.bouncePaddle(this.rightPaddle, 10);\n\n        // scoring: ball left or right out\n        if (this.ball.pos.x + this.ball.r < 0) {\n            this.rightPlayer.addPoint();\n            this.resetBall(1);\n        } else if (this.ball.pos.x - this.ball.r > canvas.width) {\n            this.leftPlayer.addPoint();\n            this.resetBall(-1);\n        }\n\n        // render\n        this.render();\n    }\n\n    render() {\n        const { ctx, canvas } = this;\n\n        // clear\n        const bg = new Rect(0, 0, canvas.width, canvas.height);\n        bg.render(ctx, { fill: \"#0b0f16\" });\n\n        // middle dashed line\n        const midLine = new Line(canvas.width / 2, 0, canvas.width / 2, canvas.height);\n        midLine.render(ctx, { stroke: \"#182235\", dash: [8, 8] });\n\n        // paddles & ball\n        this.leftPaddle.render(ctx);\n        this.rightPaddle.render(ctx);\n        this.ball.render(ctx);\n\n        // score\n        ctx.fillStyle = \"#9aa\";\n        ctx.font = \"20px monospace\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(`${this.leftPlayer.score}`, canvas.width / 2 - 40, 30);\n        ctx.fillText(`${this.rightPlayer.score}`, canvas.width / 2 + 40, 30);\n    }\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   Game.ts                                            :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/19 19:15:00 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/19 19:22:41 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport AbstractView from \"./AbstractView.ts\";\nimport PongGame from \"../games/pong/PongGame.js\";\nimport Rect from \"../games/lib2D/Rect.js\";\n\nexport default class Game extends AbstractView {\n\n    constructor(ctx: any) {\n        super(ctx);\n        this.setTitle(\"Game\");\n    }\n\n    async getHTML() {\n        return /*html*/ `\n      <div class=\"grid md:grid-cols-[220px_1fr] gap-6 p-6\">\n        <aside class=\"bg-slate-800/60 rounded-xl p-4 border border-slate-700\">\n          <h2 class=\"text-lg font-semibold mb-3\">Menu</h2>\n          <nav class=\"flex flex-col gap-2\">\n            <a href=\"/\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Dashboard</a>\n            <a href=\"/posts\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Posts</a>\n            <a href=\"/settings\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Settings</a>\n            <a href=\"/game\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Game</a>\n          </nav>\n        </aside>\n\n        <main class=\"space-y-4\">\n          <h1 class=\"text-2xl font-bold\">Pong</h1>\n\n          <div class=\"rounded-xl border border-slate-700 bg-slate-800/60 p-4\">\n            <div class=\"space-y-3\">\n              <canvas id=\"gameCanvas\" width=\"800\" height=\"600\" class=\"w-full rounded-xl border border-slate-700 bg-black\"></canvas>\n              <div class=\"flex gap-2\">\n                <button id=\"start-button\" class=\"px-4 py-2 rounded bg-blue-600 hover:bg-blue-700\">Start</button>\n                <button id=\"stop-button\"  class=\"px-4 py-2 rounded bg-slate-700 hover:bg-slate-700/60\">Stop</button>\n              </div>\n              <p class=\"text-slate-300 text-sm\">Controls Left Player: w \u2191 / s \u2193</p>\n              <p class=\"text-slate-300 text-sm\">Controls Right Player: Arrow \u2191 / Arrow \u2193</p>\n            </div>\n          </div>\n        </main>\n      </div>\n    `;\n    }\n\n    mount() {\n        const canvas = document.querySelector(\"#gameCanvas\");\n        const ctx = canvas.getContext(\"2d\");\n\n        const game = new PongGame(canvas, ctx);\n\n        // Toggle FPS\n        window.addEventListener(\"keydown\", (e) => { if (e.key.toLowerCase() === \"f\") game.loop.toggleFPS(); });\n\n        const start = document.querySelector(\"#start-button\");\n        const stop = document.querySelector(\"#stop-button\");\n\n        const bg = new Rect(0, 0, canvas.width, canvas.height);\n        bg.render(ctx, { fill: \"#0b0f16\" });\n\n        start.addEventListener(\"click\", () => {\n            game.start();\n        })\n\n        stop.addEventListener(\"click\", () => {\n            game.stop();\n        })\n    }\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   NotFound.ts                                        :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/08/16 19:51:07 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/19 20:05:57 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport AbstractView from \"./AbstractView.js\";\n\nexport default class NotFound extends AbstractView {\n    constructor(ctx: any) {\n        super(ctx);\n        this.setTitle(\"NotFound\");\n    }\n\n    async getHTML() {\n        return /*html*/ `\n    <div class=\"grid md:grid-cols-[220px_1fr] gap-6 p-6\">\n      <aside class=\"bg-slate-800/60 rounded-xl p-4 border border-slate-700\">\n        <h2 class=\"text-lg font-semibold mb-3\">Menu</h2>\n        <nav class=\"flex flex-col gap-2\">\n          <a href=\"/\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Dashboard</a>\n          <a href=\"/posts\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Posts</a>\n          <a href=\"/settings\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Settings</a>\n          <a href=\"/game\" data-link class=\"px-3 py-2 rounded hover:bg-slate-700/60\">Game</a>\n        </nav>\n      </aside>\n\n      <main class=\"space-y-4\">\n        <h1 class=\"text-2xl font-bold\">Not Found</h1>\n\n        <div class=\"rounded-xl border border-rose-800 bg-rose-900/80 p-4\">\n          <p class=\"text-rose-100\">Sorry, the page you are looking for was not found.</p>\n        </div>\n      </main>\n    </div>\n  `;\n    }\n}\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   main.ts                                            :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/07/14 17:49:45 by jeportie          #+#    #+#             //\n//   Updated: 2025/08/21 15:57:55 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport Router from \"./tools/Router.js\";\nimport Fetch from \"./tools/Fetch.js\";\n\nimport Dashboard from \"./views/Dashboard.ts\";\nimport Posts from \"./views/Posts.ts\";\nimport Settings from \"./views/Settings.ts\";\nimport Game from \"./views/Game.ts\";\nimport NotFound from \"./views/NotFound.ts\";\n\nconst API = new Fetch(\"http://localhost:8000\");\n\nconst routes = [\n    { path: \"/\", view: Dashboard },\n    { path: \"/posts\", view: Posts },\n    { path: \"/posts/:id\", view: Posts },\n    { path: \"/settings\", view: Settings },\n    { path: \"/game\", view: Game },\n    { path: \"*\", view: NotFound },\n];\n\nconst router = new Router({\n    routes,\n    mountSelector: \"#app\",\n    linkSelector: \"[data-link]\",\n    onBeforeNavigate: (to) => {\n        // Example: block access to /game if not logged in\n        //\n        // if (to.startsWith(\"/game\") && !isLoggedIn()) {\n        //      alert(\"You must be logged in to access the game.\");\n        //      return false; // cancels navigation\n        // }\n    },\n});\n\n// Export nav function to web dev console\nwindow.navigateTo = (url) => router.navigateTo(url);\n\nAPI.get(\"/health\")\n    .then(data => console.log(\"\u2705 Health check:\", data))\n    .catch((err) => console.error(\"\u274C Health check error:\", err));\n\nrouter.start();\nrouter.match\n"],
  "mappings": "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",
  "names": ["clamp"]
}
