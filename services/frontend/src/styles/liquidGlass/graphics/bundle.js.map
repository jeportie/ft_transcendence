{
  "version": 3,
  "sources": ["../lib/magnifyingDisplacement.ts", "../lib/displacementMap.ts", "../lib/specular.ts", "../lib/surfaceEquations.ts", "../lib/imageDataToUrl.ts", "../lib/refractionFilter.ts", "magnifyingGlass.ts"],
  "sourcesContent": ["// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   magnifyingDisplacement.ts                          :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/10/24 12:50:00 by jeportie          #+#    #+#             //\n//   Updated: 2025/10/25 17:45:00 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nexport function createImageDataBrowser(width: number, height: number): ImageData {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\")!;\n    return ctx.createImageData(width, height);\n}\n\n/**\n * Creates a centered symmetric magnifying displacement map.\n */\nexport function calculateMagnifyingDisplacementMap(\n    canvasWidth: number,\n    canvasHeight: number\n): ImageData {\n    const dpr = window.devicePixelRatio ?? 1;\n    const bufferWidth = Math.floor(canvasWidth * dpr);\n    const bufferHeight = Math.floor(canvasHeight * dpr);\n    const imageData = createImageDataBrowser(bufferWidth, bufferHeight);\n\n    const cx = bufferWidth / 2;\n    const cy = bufferHeight / 2;\n    const sx = bufferWidth / 2;\n    const sy = bufferHeight / 2;\n    const data = imageData.data;\n\n    for (let y = 0; y < bufferHeight; y++) {\n        for (let x = 0; x < bufferWidth; x++) {\n            const idx = (y * bufferWidth + x) * 4;\n            const rX = (x - cx) / sx;\n            const rY = (y - cy) / sy;\n            data[idx] = 128 - rX * 127;\n            data[idx + 1] = 128 - rY * 127;\n            data[idx + 2] = 0;\n            data[idx + 3] = 255;\n        }\n    }\n    return imageData;\n}\n\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   displacementMap.ts                                 :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/10/24 13:00:23 by jeportie          #+#    #+#             //\n//   Updated: 2025/10/25 11:54:46 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport { createImageDataBrowser } from \"./magnifyingDisplacement\";\n\nexport function calculateDisplacementMap(\n    glassThickness = 200,\n    bezelWidth = 50,\n    bezelHeightFn: (x: number) => number = (x) => x,\n    refractiveIndex = 1.5,\n    samples = 128\n): number[] {\n    const eta = 1 / refractiveIndex;\n\n    function refract(normalX: number, normalY: number): [number, number] | null {\n        const dot = normalY;\n        const k = 1 - eta * eta * (1 - dot * dot);\n        if (k < 0) return null;\n        const kSqrt = Math.sqrt(k);\n        return [-(eta * dot + kSqrt) * normalX, eta - (eta * dot + kSqrt) * normalY];\n    }\n\n    return Array.from({ length: samples }, (_, i) => {\n        const x = i / samples;\n        const y = bezelHeightFn(x);\n\n        const dx = 0.0001;\n        const y2 = bezelHeightFn(x + dx);\n        const derivative = (y2 - y) / dx;\n        const magnitude = Math.sqrt(derivative * derivative + 1);\n        const normal = [-derivative / magnitude, -1 / magnitude];\n        const refracted = refract(normal[0], normal[1]);\n        if (!refracted) return 0;\n\n        const remainingHeight = y * bezelWidth + glassThickness;\n        return refracted[0] * (remainingHeight / refracted[1]);\n    });\n}\n\nexport function calculateDisplacementMap2(\n    canvasWidth: number,\n    canvasHeight: number,\n    objectWidth: number,\n    objectHeight: number,\n    radius: number,\n    bezelWidth: number,\n    maximumDisplacement: number,\n    precomputedDisplacementMap: number[] = [],\n    dpr?: number\n): ImageData {\n    const devicePixelRatio = dpr ?? window.devicePixelRatio ?? 1;\n    const bufferWidth = Math.floor(canvasWidth * devicePixelRatio);\n    const bufferHeight = Math.floor(canvasHeight * devicePixelRatio);\n    const imageData = createImageDataBrowser(bufferWidth, bufferHeight);\n    const data = imageData.data;\n\n    // --- Center coordinates (\uD83D\uDCA5 fix)\n    const cx = bufferWidth / 2;\n    const cy = bufferHeight / 2;\n\n    const radius_ = radius * devicePixelRatio;\n    const bezel = bezelWidth * devicePixelRatio;\n    const outerSq = radius_ ** 2;\n    const innerSq = (radius_ - bezel) ** 2;\n\n    for (let y = 0; y < bufferHeight; y++) {\n        for (let x = 0; x < bufferWidth; x++) {\n            const idx = (y * bufferWidth + x) * 4;\n\n            // Centered coordinates\n            const dx = x - cx;\n            const dy = y - cy;\n            const distSq = dx * dx + dy * dy;\n            if (distSq > outerSq || distSq < innerSq) continue;\n\n            const dist = Math.sqrt(distSq);\n            const distFromSide = radius_ - dist;\n            const cos = dx / dist;\n            const sin = dy / dist;\n\n            const bezelIndex = Math.floor(\n                (distFromSide / bezel) * precomputedDisplacementMap.length\n            );\n            const distance = precomputedDisplacementMap[bezelIndex] ?? 0;\n\n            const dX = (-cos * distance) / maximumDisplacement;\n            const dY = (-sin * distance) / maximumDisplacement;\n\n            data[idx] = 128 + dX * 127;\n            data[idx + 1] = 128 + dY * 127;\n            data[idx + 2] = 0;\n            data[idx + 3] = 255;\n        }\n    }\n\n    return imageData;\n}\n\n", "\n// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   specular.ts                                        :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/10/24 11:53:03 by jeportie          #+#    #+#             //\n//   Updated: 2025/10/25 18:40:00 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport { createImageDataBrowser } from \"./magnifyingDisplacement\";\n\n/**\n * Generates a thin specular ring *around the lens edge*, centered and symmetric.\n * The highlight direction is controlled by `specularAngle`.\n */\nexport function calculateRefractionSpecular(\n    objectWidth: number,\n    objectHeight: number,\n    radius: number,\n    bezelWidth: number,\n    specularAngle = Math.PI / 3,\n    dpr?: number\n): ImageData {\n    const devicePixelRatio = dpr ?? window.devicePixelRatio ?? 1;\n    const W = Math.floor(objectWidth * devicePixelRatio);\n    const H = Math.floor(objectHeight * devicePixelRatio);\n    const img = createImageDataBrowser(W, H);\n    const data = img.data;\n\n    const cx = W / 2;\n    const cy = H / 2;\n\n    const r = radius * devicePixelRatio;\n    const b = bezelWidth * devicePixelRatio;\n\n    // Ring confines (slightly outside and inside the geometric edge)\n    const innerSq = Math.max(0, (r - b * 0.45) ** 2);\n    const outerSq = (r + 0.75 * devicePixelRatio) ** 2;\n\n    const lx = Math.cos(specularAngle);\n    const ly = Math.sin(specularAngle);\n\n    for (let y = 0; y < H; y++) {\n        for (let x = 0; x < W; x++) {\n            const i = (y * W + x) * 4;\n\n            const dx = x - cx;\n            const dy = y - cy;\n            const d2 = dx * dx + dy * dy;\n            if (d2 < innerSq || d2 > outerSq) continue;\n\n            const d = Math.sqrt(d2);\n            const nx = dx / d;      // outward normal\n            const ny = dy / d;\n\n            // light alignment\n            const ndotl = Math.max(0, nx * lx + ny * ly);\n\n            // distance into ring [0..1] (1 at outer rim)\n            const t = Math.min(1, Math.max(0, (d - (r - b * 0.45)) / (b * 0.45 + 0.75)));\n            // gentle rim falloff\n            const rim = Math.sqrt(1 - (1 - t) * (1 - t)); // smooth-ish\n\n            const intensity = ndotl * rim;\n            if (intensity <= 0) continue;\n\n            const c = Math.round(255 * intensity);\n            const a = Math.round(200 * intensity); // softer alpha than color\n\n            data[i] = c;\n            data[i + 1] = c;\n            data[i + 2] = c;\n            data[i + 3] = a;\n        }\n    }\n    return img;\n}\n\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   surfaceEquations.ts                                :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/10/24 11:53:30 by jeportie          #+#    #+#             //\n//   Updated: 2025/10/24 11:53:33 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nexport type SurfaceFnDef = {\n    title: string;\n    fn: (x: number) => number;\n};\n\nexport const CONVEX_CIRCLE: SurfaceFnDef = {\n    title: \"Convex Circle\",\n    fn: (x) => Math.sqrt(1 - (1 - x) ** 2),\n};\n\nexport const CONVEX: SurfaceFnDef = {\n    title: \"Convex Squircle\",\n    fn: (x) => Math.pow(1 - Math.pow(1 - x, 4), 1 / 4),\n};\n\nexport const CONCAVE: SurfaceFnDef = {\n    title: \"Concave\",\n    fn: (x) => 1 - CONVEX_CIRCLE.fn(x),\n};\n\nexport const LIP: SurfaceFnDef = {\n    title: \"Lip\",\n    fn: (x) => {\n        const convex = CONVEX.fn(x * 2);\n        const concave = CONCAVE.fn(x) + 0.1;\n        const smootherstep = 6 * x ** 5 - 15 * x ** 4 + 10 * x ** 3;\n        return convex * (1 - smootherstep) + concave * smootherstep;\n    },\n};\n\nexport const fns: SurfaceFnDef[] = [CONVEX, CONCAVE, LIP];\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   imageDataToUrl.ts                                  :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/10/24 11:51:38 by jeportie          #+#    #+#             //\n//   Updated: 2025/10/24 12:58:43 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nexport function imageDataToUrl(imageData: ImageData): string {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = imageData.width;\n    canvas.height = imageData.height;\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) throw new Error(\"Failed to get 2D context\");\n    ctx.putImageData(imageData, 0, 0);\n    return canvas.toDataURL();\n}\n\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   refractionFilter.ts                                :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/10/25 10:44:52 by jeportie          #+#    #+#             //\n//   Updated: 2025/10/25 18:30:10 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport { calculateDisplacementMap, calculateDisplacementMap2 } from \"./displacementMap\";\nimport { calculateMagnifyingDisplacementMap } from \"./magnifyingDisplacement\";\nimport { calculateRefractionSpecular } from \"./specular\";\nimport { CONVEX, CONVEX_CIRCLE, CONCAVE, LIP } from \"./surfaceEquations\";\nimport { imageDataToUrl } from \"./imageDataToUrl\";\n\nexport interface RefractionFilterParams {\n    id: string;\n    width?: number;\n    height?: number;\n    radius?: number;\n    bezelWidth?: number;\n    glassThickness?: number;\n    refractiveIndex?: number;\n    bezelType?: \"convex_circle\" | \"convex_squircle\" | \"concave\" | \"lip\";\n    blur?: number;\n    scaleRatio?: number;\n    specularOpacity?: number;\n    specularSaturation?: number;\n    magnify?: boolean;\n    magnifyingScale?: number;\n}\n\n/**\n * Build an SVG <filter> suitable for use as a CSS backdrop-filter in Chrome.\n * Important: we use userSpaceOnUse so pixel assets align with element bounds.\n */\nexport function createRefractionFilter(options: RefractionFilterParams): SVGFilterElement {\n    const {\n        id,\n        width = 150,\n        height = 150,\n        radius = Math.floor((width + height) / 4),\n        bezelWidth = 40,\n        glassThickness = 120,\n        refractiveIndex = 1.5,\n        bezelType = \"convex_squircle\",\n        blur = 0,\n        scaleRatio = 1,\n        specularOpacity = 0.5,\n        specularSaturation = 9,\n        magnify = true,\n        magnifyingScale = 24, // stronger default so zoom is obvious\n    } = options;\n\n    // pick surface profile\n    let surfaceFn: (x: number) => number;\n    switch (bezelType) {\n        case \"convex_circle\":\n            surfaceFn = CONVEX_CIRCLE.fn;\n            break;\n        case \"concave\":\n            surfaceFn = CONCAVE.fn;\n            break;\n        case \"lip\":\n            surfaceFn = LIP.fn;\n            break;\n        default:\n            surfaceFn = CONVEX.fn;\n    }\n\n    // 1D refraction profile + 2D maps\n    const precomputed = calculateDisplacementMap(glassThickness, bezelWidth, surfaceFn, refractiveIndex);\n    const disp = calculateDisplacementMap2(width, height, width, height, radius, bezelWidth, 100, precomputed, 1);\n    const spec = calculateRefractionSpecular(width, height, radius, bezelWidth, undefined, 1);\n\n    const dispUrl = imageDataToUrl(disp);\n    const specUrl = imageDataToUrl(spec);\n    const magnifyUrl = magnify ? imageDataToUrl(calculateMagnifyingDisplacementMap(width, height)) : null;\n\n    // single hidden <svg><defs>\n    const svgNS = \"http://www.w3.org/2000/svg\";\n    let svg = document.querySelector<SVGSVGElement>(\"svg#liquid-glass-defs\");\n    let defs = svg?.querySelector(\"defs\");\n    if (!svg || !defs) {\n        svg = document.createElementNS(svgNS, \"svg\");\n        svg.id = \"liquid-glass-defs\";\n        svg.style.display = \"none\";\n        defs = document.createElementNS(svgNS, \"defs\");\n        svg.appendChild(defs);\n        document.body.appendChild(svg);\n    }\n\n    // replace old filter with same id\n    const old = document.getElementById(id);\n    if (old?.parentElement) old.parentElement.removeChild(old);\n\n    // filter \u2014 IMPORTANT: userSpaceOnUse and explicit bounds for backdrop-filter\n    const f = document.createElementNS(svgNS, \"filter\");\n    f.setAttribute(\"id\", id);\n    f.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n    f.setAttribute(\"filterUnits\", \"userSpaceOnUse\");\n    f.setAttribute(\"primitiveUnits\", \"userSpaceOnUse\");\n    f.setAttribute(\"x\", \"0\");\n    f.setAttribute(\"y\", \"0\");\n    f.setAttribute(\"width\", String(width));\n    f.setAttribute(\"height\", String(height));\n\n    // optional magnifying pre-pass (moves pixels radially)\n    if (magnify && magnifyUrl) {\n        const feImgMag = document.createElementNS(svgNS, \"feImage\");\n        feImgMag.setAttribute(\"href\", magnifyUrl);\n        feImgMag.setAttribute(\"x\", \"0\");\n        feImgMag.setAttribute(\"y\", \"0\");\n        feImgMag.setAttribute(\"width\", String(width));\n        feImgMag.setAttribute(\"height\", String(height));\n        feImgMag.setAttribute(\"preserveAspectRatio\", \"none\");\n        feImgMag.setAttribute(\"result\", \"magnifying_displacement_map\");\n        f.appendChild(feImgMag);\n\n        const feDispMag = document.createElementNS(svgNS, \"feDisplacementMap\");\n        feDispMag.setAttribute(\"in\", \"SourceGraphic\");\n        feDispMag.setAttribute(\"in2\", \"magnifying_displacement_map\");\n        feDispMag.setAttribute(\"scale\", String(magnifyingScale)); // e.g. 24..48\n        feDispMag.setAttribute(\"xChannelSelector\", \"R\");\n        feDispMag.setAttribute(\"yChannelSelector\", \"G\");\n        feDispMag.setAttribute(\"result\", \"magnified_source\");\n        f.appendChild(feDispMag);\n    }\n\n    const feBlur = document.createElementNS(svgNS, \"feGaussianBlur\");\n    feBlur.setAttribute(\"in\", magnify ? \"magnified_source\" : \"SourceGraphic\");\n    feBlur.setAttribute(\"stdDeviation\", String(blur));\n    feBlur.setAttribute(\"result\", \"blurred_source\");\n    f.appendChild(feBlur);\n\n    // refraction displacement\n    const feImgDisp = document.createElementNS(svgNS, \"feImage\");\n    feImgDisp.setAttribute(\"href\", dispUrl);\n    feImgDisp.setAttribute(\"x\", \"0\");\n    feImgDisp.setAttribute(\"y\", \"0\");\n    feImgDisp.setAttribute(\"width\", String(width));\n    feImgDisp.setAttribute(\"height\", String(height));\n    feImgDisp.setAttribute(\"preserveAspectRatio\", \"none\");\n    feImgDisp.setAttribute(\"result\", \"displacement_map\");\n    f.appendChild(feImgDisp);\n\n    const feDisp = document.createElementNS(svgNS, \"feDisplacementMap\");\n    feDisp.setAttribute(\"in\", \"blurred_source\");\n    feDisp.setAttribute(\"in2\", \"displacement_map\");\n    feDisp.setAttribute(\"scale\", String(40 * scaleRatio)); // base 40 feels nice\n    feDisp.setAttribute(\"xChannelSelector\", \"R\");\n    feDisp.setAttribute(\"yChannelSelector\", \"G\");\n    feDisp.setAttribute(\"result\", \"displaced\");\n    f.appendChild(feDisp);\n\n    // (optional) color boost before specular\n    const feSat = document.createElementNS(svgNS, \"feColorMatrix\");\n    feSat.setAttribute(\"in\", \"displaced\");\n    feSat.setAttribute(\"type\", \"saturate\");\n    feSat.setAttribute(\"values\", String(specularSaturation));\n    feSat.setAttribute(\"result\", \"displaced_saturated\");\n    f.appendChild(feSat);\n\n    // specular rim (now with bloom + screen blend)\n    const feImgSpec = document.createElementNS(svgNS, \"feImage\");\n    feImgSpec.setAttribute(\"href\", specUrl);\n    feImgSpec.setAttribute(\"x\", \"0\");\n    feImgSpec.setAttribute(\"y\", \"0\");\n    feImgSpec.setAttribute(\"width\", String(width));\n    feImgSpec.setAttribute(\"height\", String(height));\n    feImgSpec.setAttribute(\"preserveAspectRatio\", \"none\");\n    feImgSpec.setAttribute(\"result\", \"specular_layer\");\n    f.appendChild(feImgSpec);\n\n    // fade specular alpha\n    const feTrans = document.createElementNS(svgNS, \"feComponentTransfer\");\n    feTrans.setAttribute(\"in\", \"specular_layer\");\n    feTrans.setAttribute(\"result\", \"specular_faded\");\n    const feFuncA = document.createElementNS(svgNS, \"feFuncA\");\n    feFuncA.setAttribute(\"type\", \"linear\");\n    feFuncA.setAttribute(\"slope\", String(specularOpacity)); // 0..1\n    feTrans.appendChild(feFuncA);\n    f.appendChild(feTrans);\n\n    // slight blur for bloom\n    const feSpecBlur = document.createElementNS(svgNS, \"feGaussianBlur\");\n    feSpecBlur.setAttribute(\"in\", \"specular_faded\");\n    feSpecBlur.setAttribute(\"stdDeviation\", \"0.6\");\n    feSpecBlur.setAttribute(\"result\", \"specular_bloom\");\n    f.appendChild(feSpecBlur);\n\n    // composite specular mask to ring only\n    const feComp = document.createElementNS(svgNS, \"feComposite\");\n    feComp.setAttribute(\"in\", \"displaced_saturated\");\n    feComp.setAttribute(\"in2\", \"specular_bloom\");\n    feComp.setAttribute(\"operator\", \"in\");\n    feComp.setAttribute(\"result\", \"specular_masked\");\n    f.appendChild(feComp);\n\n    // add specular to base using screen (gives highlight)\n    const feBlendScreen = document.createElementNS(svgNS, \"feBlend\");\n    feBlendScreen.setAttribute(\"in\", \"specular_masked\");\n    feBlendScreen.setAttribute(\"in2\", \"displaced\");\n    feBlendScreen.setAttribute(\"mode\", \"screen\");\n    feBlendScreen.setAttribute(\"result\", \"withSpecular\");\n    f.appendChild(feBlendScreen);\n\n    // final normal blend for saturation layer over base (preserve hue pop)\n    const feBlendFinal = document.createElementNS(svgNS, \"feBlend\");\n    feBlendFinal.setAttribute(\"in\", \"specular_faded\");\n    feBlendFinal.setAttribute(\"in2\", \"withSpecular\");\n    feBlendFinal.setAttribute(\"mode\", \"normal\");\n    f.appendChild(feBlendFinal);\n\n    defs.appendChild(f);\n    return f;\n}\n\n", "// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   magnifyingGlass.ts                                 :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2025/10/25 16:23:19 by jeportie          #+#    #+#             //\n//   Updated: 2025/10/25 18:28:51 by jeportie         ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport { createRefractionFilter } from \"../lib/refractionFilter\";\n\n/**\n * Backdrop-filter version (Chrome): the lens refracts true background content.\n * Sliders rebuild the SVG filter in-place.\n */\nexport function setupMagnifyingGlass(root: HTMLElement) {\n    const lens = root.querySelector<HTMLDivElement>(\".lens\");\n    if (!lens) return;\n\n    // initial filter\n    let current = createRefractionFilter({\n        id: \"liquid\",\n        magnify: true,\n        width: 210,\n        height: 150,\n        specularOpacity: 0.5,\n        specularSaturation: 9,\n        scaleRatio: 1,\n        magnifyingScale: 24,\n    });\n\n    // ensure the CSS sees it as a backdrop-filter target\n    requestAnimationFrame(() => {\n        (lens.style as any).backdropFilter = `url(#${current.id})`;\n    });\n\n    // sliders\n    const opacity = document.getElementById(\"specularOpacity\") as HTMLInputElement;\n    const sat = document.getElementById(\"specularSaturation\") as HTMLInputElement;\n    const refr = document.getElementById(\"refractionBase\") as HTMLInputElement;\n    const mag = document.getElementById(\"magnifyScale\") as HTMLInputElement;\n\n    function rebuild() {\n        const old = document.getElementById(\"liquid\");\n        if (old?.parentElement) old.parentElement.removeChild(old);\n\n        current = createRefractionFilter({\n            id: \"liquid\",\n            magnify: true,\n            width: 210,\n            height: 150,\n            specularOpacity: parseFloat(opacity.value),\n            specularSaturation: parseFloat(sat.value),\n            scaleRatio: parseFloat(refr.value),\n            magnifyingScale: parseFloat(mag.value),\n        });\n\n        (lens.style as any).backdropFilter = `url(#${current.id})`;\n    }\n\n    [opacity, sat, refr, mag].forEach((s) => s.addEventListener(\"input\", rebuild));\n\n    // drag\n    let dragging = false;\n    let offX = 0, offY = 0;\n    lens.addEventListener(\"mousedown\", (e) => {\n        dragging = true;\n        offX = e.offsetX; offY = e.offsetY;\n        lens.style.cursor = \"grabbing\";\n    });\n    window.addEventListener(\"mouseup\", () => {\n        dragging = false;\n        lens.style.cursor = \"grab\";\n    });\n    window.addEventListener(\"mousemove\", (e) => {\n        if (!dragging) return;\n        const rect = root.getBoundingClientRect();\n        const x = e.clientX - rect.left - offX;\n        const y = e.clientY - rect.top - offY;\n        lens.style.left = `${x}px`;\n        lens.style.top = `${y}px`;\n    });\n}\n\n"],
  "mappings": "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",
  "names": []
}
