# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    docker-compose.yml                                 :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2025/09/28 19:22:31 by jeportie          #+#    #+#              #
#    Updated: 2025/10/16 12:31:01 by jeportie         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

services:
### --- FRONTEND --- ###
  frontend:
    container_name: frontend
    image: frontend
    env_file:
      - services/frontend/.env.local
    volumes:
      - ./services/frontend/public:/app/public
    networks:
      - transc
    build: ./services/frontend
    restart: always

### --- MIGRATOR --- ###
  # migrator:
  #   build: ./services/api
  #   command: ["node", "src/db/migrations.js"]
  #   volumes:
  #     - ~/data/sqlite:/data
  #   environment:
  #     - NODE_ENV=development
  #     - DB_FILE=/data/app.db
  #   networks:
  #     - transc

### --- API --- ###
  api:
    container_name: api
    image: api 
    env_file:
      - services/api/.env.local
    volumes:
      - ~/data/sqlite:/data
      - ./services/frontend/public:/app/public:ro
    networks:
      - transc
    ports:
      - "5000:5000"
    build: ./services/api
    restart: always
    # depends_on:
      # migrator:
        # condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:5000/api/system/health"]
      interval: 10s
      timeout: 3s
      retries: 10

### --- AUTOMATION --- ###
  automation:
    container_name: automation
    build: ./services/automation
    image: automation
    env_file:
      - services/api/.env.local
    volumes:
      - ~/data/sqlite:/data
    networks:
      - transc
    restart: always

### --- SQLITE-WEB --- ###
  sqlite-web:
    image: coleifer/sqlite-web
    command: sqlite_web --host 0.0.0.0 --port 8080 /app/data/app.db
    working_dir: /app
    volumes:
      - ~/data/sqlite:/app/data
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080"]
      interval: 10s
      timeout: 3s
      retries: 10

### --- PROMETHEUS --- ###
  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - prometheus_data:/prometheus
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - transc
  #
### --- GRAFANA --- ###
  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - transc
  #
### --- CADVISOR --- ###
  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:latest
  #   container_name: cadvisor
  #   ports:
  #     - "8081:8080"
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:ro
  #     - /sys:/sys:ro
  #     # - /var/lib/docker/:/var/lib/docker:ro
  #   networks:
  #     - transc
  #
### --- NODE-EXPORTER --- ###
  # node-exporter:
  #   image: prom/node-exporter
  #   container_name: node-exporter
  #   ports:
  #     - "9100:9100"
  #   networks:
  #     - transc

volumes:
  # prometheus_data:
  # grafana_data:
  frontend_build:

networks:
  transc:
    driver: bridge
