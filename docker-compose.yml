# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    docker-compose.yml                                 :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2025/07/12 17:28:24 by jeportie          #+#    #+#              #
#    Updated: 2025/07/12 17:28:49 by jeportie         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

version: '3.8'

services:
  nginx:
    build:
      context: ./services/nginx
    container_name: nginx
    depends_on:
      frontend:
        condition: service_healthy
      api:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./services/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - transc
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz" ]
      interval: 10s
      timeout: 3s
      retries: 3

  frontend:
    build:
      context: ./services/frontend
    container_name: frontend
    environment:
      - NODE_ENV=production
    ports:
      - "3000:3000"
    volumes:
      - ./services/frontend:/app
    networks:
      - transc
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 10s
      timeout: 3s
      retries: 3

  api:
    build:
      context: ./services/api
    container_name: api
    environment:
      - NODE_ENV=production
    ports:
      - "3001:3001"
    volumes:
      - ./services/api:/app
    networks:
      - transc
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health" ]
      interval: 10s
      timeout: 3s
      retries: 3

networks:
  transc:
    driver: bridge
