// ************************************************************************** //
//                                                                            //
//                                                        :::      ::::::::   //
//   handleSignup.ts                                    :+:      :+:    :+:   //
//                                                    +:+ +:+         +:+     //
//   By: jeportie <jeportie@42.fr>                  +#+  +:+       +#+        //
//                                                +#+#+#+#+#+   +#+           //
//   Created: 2025/10/14 11:24:59 by jeportie          #+#    #+#             //
//   Updated: 2025/10/14 12:17:11 by jeportie         ###   ########.fr       //
//                                                                            //
// ************************************************************************** //

import { API } from "../../../../spa/api.js";
import { auth } from "../../../../spa/auth.js";
import { DOM } from "../dom.generated.js";
import { initRecaptcha, getRecaptchaToken } from "../../../../spa/utils/recaptcha.js";

const siteKey = "6LftBt8rAAAAAIBkUgHnNTBvRWYO7fKTnNfWC3DW"; // hardcode or load from env

export async function handleSignup({ ASSETS, logo, addCleanup }) {
    const form = DOM.signupForm;
    const userInput = DOM.signupUserInput;
    const emailInput = DOM.signupEmailInput;
    const pwdInput = DOM.signupPwdInput;
    const confirmInput = DOM.signupConfirmInput;
    const errorBox = DOM.signupErrorDiv;
    const captchaContainer = DOM.signupRecaptchaContainer;

    if (!form)
        return;

    const clearError = () => {
        if (!errorBox)
            return;
        errorBox.textContent = "";
        errorBox?.classList.add("hidden");
    }

    const showError = (msg: string) => {
        if (!errorBox)
            return;
        errorBox.textContent = msg;
        errorBox.classList.remove("hidden");
    }

    const onSubmit = async (event: SubmitEvent) => {
        event.preventDefault();

        const captchaToken = getRecaptchaToken();
        if (!captchaToken) {
            showError("Please complete the captcha.");
        }
        if (pwdInput?.value !== confirmInput?.value) {
            showError("Passwords do not match.");
        }

        if (!userInput || !emailInput || !pwdInput)
            return;

        try {
            const data = API.post("/auth/register", {
                username: userInput?.value,
                email: emailInput?.value,
                pwd: pwdInput?.value,
                captcha: captchaToken
            });
            setTimeout(() => window.navigateTo("/finalize-subscription"), 0);

        } catch (err: any) {
            console.error(`❌ [${err.code || err.status}] ${err.message}`);
            pwdInput.value = "";
            userInput?.focus();

            if (errorBox) {
                errorBox.textContent = "Invalid username or password.";
                errorBox.classList.remove("hidden");
            }
        }
    }

    const onFocus = () => {
        if (errorBox) {
            errorBox.classList.add("hidden");
            errorBox.textContent = "";
        }
    };

    await initRecaptcha(siteKey, captchaContainer);
    form?.addEventListener("submit", onSubmit);
    pwdInput?.addEventListener("focus", onFocus);

    addCleanup(() => {
        form?.removeEventListener("submit", onSubmit);
        pwdInput?.removeEventListener("focus", onFocus);
    });
}


